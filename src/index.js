/* Quasar App Extension entry (Index API only) */
'use strict';

const fs = require('fs');
const path = require('path');
const { pushBootOnce } = require('./utils/helpers');

module.exports = function (api) {
  api.compatibleWith('quasar', '^2.18.2');
  try { api.compatibleWith('@quasar/app-vite', '^2.3.0'); } catch {}

  api.extendQuasarConf((conf) => {
    conf.boot = conf.boot || [];
    conf.ssr = conf.ssr || {};
    conf.ssr.middlewares = conf.ssr.middlewares || [];
    conf.framework = conf.framework || {};

    pushBootOnce(conf, { path: '~@ugursahinkaya/ssg/boot-server', client: false });
    pushBootOnce(conf, { path: '~@ugursahinkaya/ssg/boot-client', server: false });

    if (!conf.ssr.middlewares.includes('~@ugursahinkaya/ssg/render-middleware')) {
      conf.ssr.middlewares.push('~@ugursahinkaya/ssg/render-middleware');
    }

    const plugins = new Set(conf.framework.plugins || []);
    plugins.add('Meta');
    conf.framework.plugins = Array.from(plugins);
  });

  api.registerCommand('write-server', () => {
    const appRoot = api.resolve.app();
    const target = path.join(appRoot, 'src-ssr', 'server.ts');
    const dir = path.dirname(target);
    if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
    const content = `// Auto-generated by @ugursahinkaya/quasar-app-extension-ssg (command)\n` +
`export const {\n  create,\n  listen,\n  close,\n  serveStaticContent,\n  renderPreloadTag\n} = await import('@ugursahinkaya/ssg/server')\n`;
    fs.writeFileSync(target, content, 'utf8');
    api.log('Wrote src-ssr/server.ts');
  });
};
